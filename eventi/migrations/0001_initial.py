# Generated by Django 4.2.15 on 2024-11-22 09:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import eventi.imgutils
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='Luogo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descrizione', models.TextField()),
                ('indirizzo', models.CharField(max_length=150)),
                ('sito_web', models.URLField()),
                ('thumbnail', models.ImageField(default=None, upload_to=eventi.imgutils.save_rename_luogo_img)),
            ],
            options={
                'verbose_name_plural': 'Luoghi',
            },
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titolo', models.CharField(max_length=100)),
                ('descrizione', models.TextField()),
                ('posti', models.IntegerField(default=10)),
                ('data_ora', models.DateTimeField(auto_now_add=True)),
                ('thumbnail', models.ImageField(default=None, upload_to=eventi.imgutils.save_rename_evento_img)),
                ('luogo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='eventi', to='eventi.luogo')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('waitlist', models.ManyToManyField(blank=True, related_name='waitlist', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Eventi',
            },
        ),
    ]
